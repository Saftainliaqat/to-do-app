{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saftain Liaqat\\\\Desktop\\\\todoapp\\\\todo-app\\\\src\\\\components\\\\subcontainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 as uid } from 'uuid';\nimport './subcontainer.css';\nimport Search from '../search/search';\nimport Options from '../options/options';\nimport Items from '../items/items';\nimport Footer from '../footer/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  active: true,\n  body: \"Bring food for dinner.\"\n}, {\n  id: 2,\n  active: false,\n  body: \"Go to office.\"\n}, {\n  id: 3,\n  active: true,\n  body: \"Go to sleep.\"\n}];\n\nconst SubContainer = () => {\n  _s();\n\n  const [tasks, setTasks] = useState(initialTasks);\n  const [searchValue, setSearchValue] = useState('');\n  const [edit, setEdit] = useState({\n    isEdit: false,\n    id: 0\n  });\n  const [count, setCount] = useState(3);\n  const [filterTask, setFilterTask] = useState('all');\n\n  const addTask = taskBody => {\n    if (edit.isEdit) {\n      if (taskBody) {\n        const newTasks = [...tasks];\n        const index = newTasks.findIndex(task => task.id === edit.id);\n        newTasks[index].body = taskBody;\n        setTasks(newTasks);\n      }\n\n      setSearchValue('');\n      setEdit({\n        isEdit: false,\n        id: 0\n      });\n    } else {\n      if (taskBody) {\n        setTasks([...tasks, {\n          id: uid(),\n          active: true,\n          body: taskBody\n        }]);\n        setCount(oldCount => oldCount + 1);\n      }\n    }\n  };\n\n  const toggleActive = id => {\n    const newtasks = [...tasks];\n    const index = newtasks.findIndex(task => task.id === id);\n    newtasks[index].active = !newtasks[index].active;\n    setTasks(newtasks);\n  };\n\n  const editTask = id => {\n    setSearchValue(tasks.find(task => task.id === id).body);\n    setEdit({\n      isEdit: true,\n      id\n    });\n  };\n\n  const deleteTasks = function (type) {\n    let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (type === 'one') {\n      setTasks(tasks.filter(task => task.id !== id));\n      setCount(count - 1);\n    }\n\n    if (type === 'completed') {\n      const newTasks = tasks.filter(task => task.active);\n      setTasks(newTasks);\n      setCount(newTasks.length);\n    }\n\n    if (type === 'all') {\n      setTasks([]);\n      setCount(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SubContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      addTask: addTask,\n      Value: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      count: count,\n      deleteTasks: deleteTasks,\n      setFilter: filterValue => setFilterTask(filterValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Items, {\n      taskList: tasks,\n      setActive: toggleActive,\n      editTask: editTask,\n      deleteTasks: deleteTasks,\n      filterTask: filterTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubContainer, \"dt0wRcbV0WAKiMqTEQMOZL55mg8=\");\n\n_c = SubContainer;\nexport default SubContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubContainer\");","map":{"version":3,"sources":["C:/Users/Saftain Liaqat/Desktop/todoapp/todo-app/src/components/subcontainer.js"],"names":["React","useState","v4","uid","Search","Options","Items","Footer","initialTasks","id","active","body","SubContainer","tasks","setTasks","searchValue","setSearchValue","edit","setEdit","isEdit","count","setCount","filterTask","setFilterTask","addTask","taskBody","newTasks","index","findIndex","task","oldCount","toggleActive","newtasks","editTask","find","deleteTasks","type","filter","length","filterValue"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { v4 as uid } from 'uuid'\r\nimport './subcontainer.css'\r\n\r\nimport Search from '../search/search'\r\nimport Options from '../options/options'\r\nimport Items from '../items/items'\r\nimport Footer from '../footer/footer'\r\n\r\nconst initialTasks = [\r\n    {\r\n        id:1,\r\n        active: true,\r\n        body: \"Bring food for dinner.\"\r\n    },\r\n    {\r\n        id:2,\r\n        active: false,\r\n        body: \"Go to office.\"\r\n    },\r\n    {\r\n        id:3,\r\n        active: true,\r\n        body: \"Go to sleep.\"\r\n    },\r\n]\r\n\r\nconst SubContainer = () => {\r\n    const [tasks, setTasks] = useState(initialTasks)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [edit, setEdit] = useState({isEdit: false, id: 0})\r\n    const [count, setCount] = useState(3)\r\n    const [filterTask, setFilterTask] = useState('all')\r\n\r\n    const addTask = (taskBody) => {\r\n        if(edit.isEdit){\r\n            if(taskBody){\r\n                const newTasks = [...tasks]\r\n                const index = newTasks.findIndex(task => task.id === edit.id)\r\n                newTasks[index].body = taskBody\r\n                setTasks(newTasks)\r\n            }\r\n            setSearchValue('')\r\n            setEdit({isEdit: false, id: 0})\r\n        }else{\r\n\r\n            if(taskBody){\r\n                setTasks([...tasks,{id: uid(), active: true, body: taskBody}])\r\n                setCount((oldCount) => oldCount + 1)\r\n    \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const toggleActive = (id) => {\r\n        const newtasks = [...tasks]\r\n        const index = newtasks.findIndex(task => task.id === id)\r\n        newtasks[index].active = !newtasks[index].active\r\n        setTasks(newtasks)\r\n    }\r\n\r\n    const editTask = (id) => { \r\n        setSearchValue(tasks.find(task => task.id === id).body)\r\n        setEdit({isEdit: true, id})\r\n    }\r\n\r\n    const deleteTasks = (type, id=0) => {\r\n        if(type === 'one'){\r\n            setTasks(tasks.filter(task => task.id !== id))\r\n            setCount(count - 1)\r\n        }\r\n\r\n        if(type === 'completed'){\r\n            const newTasks = tasks.filter(task => task.active)\r\n            setTasks(newTasks)\r\n            setCount(newTasks.length)\r\n        }\r\n\r\n        if(type === 'all'){\r\n            setTasks([])\r\n            setCount(0)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"SubContainer\">\r\n            <Search addTask={addTask} Value={searchValue} />\r\n            <Options count={count} deleteTasks={deleteTasks} setFilter={(filterValue)=> setFilterTask(filterValue)} />\r\n            <Items taskList={tasks} setActive={toggleActive} editTask={editTask} deleteTasks={deleteTasks} filterTask={filterTask} />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubContainer"]},"metadata":{},"sourceType":"module"}